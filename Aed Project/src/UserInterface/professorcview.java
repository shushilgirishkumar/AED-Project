/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Courses.CourseDetails;
import java.awt.CardLayout;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Employer.EmployerHistory;
import Professor.ProfessorHistory;
import Professor.ProfessorProfile;
import Student.Studentde;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;

/**
 *
 * @author devmi
 */
public class professorcview extends javax.swing.JPanel {
    private JPanel userProcessContainer;
     Professor.ProfessorHistory history;
         Professor.ProfessorHistory coursehistory;
         Professor.ProfessorHistory regcoursehistory;
          Professor.ProfessorHistory sugg;
//          Professor.ProfessorHistory 
            Professor.ProfessorHistory ph;
            String p_neuid;
                   
    String CRN;
    String Subject_code;
    String Term_offered;
    String professor_name;
    String Subject;
    String pre_requisite;
    String Department;
    String startDateTime;
    String endDateTime;
    String Description;
    int Credits;
    String status;
    String mode;
    int seats;
    String Grade;
    int rating;
    
                     

//            userinterface.professorcview panel = new userinterface.professorcview(userProcessContainer, history,  coursehistory,  regcoursehistory, sugg, Subject, pre, Department,subject_code, CRN, professor, Term_offered, Sdtm,edtm, Descri, credits, Status, seats, mode, Grade, rating); 

       

    /**
     * Creates new form NewJPanel
     */
    public professorcview(JPanel userProcessContainer, ProfessorHistory history,ProfessorHistory ph, String p_neuid, ProfessorHistory coursehistory, ProfessorHistory regcoursehistory,  ProfessorHistory sugg,String Subject, String pre_requisite, String Department, String Subject_code, String CRN, String professor_name, String Term_offered, String startDateTime, String endDateTime, String Description, int Credits, String status, int seats, String mode, String Grade, int rating) {
         this.userProcessContainer = userProcessContainer;
        initComponents();
        this.p_neuid = p_neuid;
        this.history = history;
        this.coursehistory = coursehistory;
        this.regcoursehistory = regcoursehistory;
        this.ph = ph;
        this.sugg = sugg;
     this.CRN = CRN;
     this.Subject_code = Subject_code;
    this. Term_offered = Term_offered;
     this.professor_name = professor_name;
    this.Subject = Subject;
    this.pre_requisite = pre_requisite;
    this.Department = Department;
    this. startDateTime = startDateTime;
    this.endDateTime = endDateTime;
    this.Description = Description;
    this.Credits=Credits;
    this.status = status;
    this.mode = mode;
    this.seats = seats;
    this.Grade = Grade;
    this.rating = rating;
    this.p_neuid = p_neuid;
     populatefieldc();
     ImageIcon ii = new ImageIcon(getClass().getResource("/UI_Images/Faculty3.jpeg.jpg"));
        Image image = ii.getImage();
        int width = 50; // Set the desired width
        int height = 50;
        Image scaledImage = image.getScaledInstance(width, height, Image.SCALE_DEFAULT);
        ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
        txtprofpic.setIcon(new ImageIcon(image));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
   
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        CourseDisc = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtprofpic = new javax.swing.JLabel();
        Namelbl = new javax.swing.JLabel();
        deplbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        termlbl = new javax.swing.JLabel();
        Specality = new javax.swing.JLabel();
        txtemailc = new javax.swing.JTextField();
        txtexpc = new javax.swing.JTextField();
        txtdepartmenthc = new javax.swing.JTextField();
        txtnamec = new javax.swing.JTextField();
        txtneuc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setForeground(new java.awt.Color(153, 153, 153));

        jButton7.setText("Register");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        CourseDisc.setEditable(false);
        CourseDisc.setColumns(20);
        CourseDisc.setRows(5);
        CourseDisc.setAutoscrolls(false);
        jScrollPane2.setViewportView(CourseDisc);

        jLabel1.setText("Course Description");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(248, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 112, -1, 614));

        txtprofpic.setBackground(new java.awt.Color(153, 153, 153));
        txtprofpic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 3, true));

        Namelbl.setText("Name");

        deplbl.setText("NEU ID");

        jLabel7.setText("Experience");

        termlbl.setText("Email ID");

        Specality.setText("Department");

        txtneuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtneucActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deplbl)
                            .addComponent(Namelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(termlbl)
                            .addComponent(Specality))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtemailc, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(txtexpc)
                            .addComponent(txtdepartmenthc)
                            .addComponent(txtnamec)
                            .addComponent(txtneuc)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(txtprofpic, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(txtprofpic, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Namelbl)
                    .addComponent(txtnamec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deplbl)
                    .addComponent(txtneuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtexpc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termlbl)
                    .addComponent(txtemailc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Specality)
                    .addComponent(txtdepartmenthc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(157, Short.MAX_VALUE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 112, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Course Review");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 6, 832, 78));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jButton2.setText("Search Course");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Settings");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Feedback");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Home");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jButton8.setText("Course suggestion");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton8)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(279, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
   boolean shouldAddNewCourse = true;
    int totalCredits = 0;
    int p = 0;
        int totalCredits1 = 0;

    

    SimpleDateFormat dateTimeFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm");
    try {
        Date Sdtm1 = dateTimeFormat.parse(startDateTime);
        Date edtm1 = dateTimeFormat.parse(endDateTime);
         System.out.println(edtm1);
        for (Professor.registercours regCourse : regcoursehistory.getRegcoursehistory()) {
            if (regCourse.getNEUID().equals(p_neuid)) {
                p=1;
                for (Courses.CourseDetails course : regCourse.getCoursehistory()) {
                    Date newStartDate = dateTimeFormat.parse(course.getStartDateTime());
                    Date newEndDate = dateTimeFormat.parse(course.getEndDateTime());
                    if(course.getCourse_status().equals("ongoing"))
                        totalCredits += course.getCourse_credit();
                    if(course.getCourse_status().equals("completed"))
                        totalCredits1 += course.getCourse_credit();
                    // Check for date overlap
                    if (Sdtm1.before(newEndDate) && edtm1.after(newStartDate) && course.getCoursename().equals(Subject)) {
                   //     printCourseHistory();
                       shouldAddNewCourse = false;
                       JOptionPane.showMessageDialog(null, "Unable to register, There is a time conflict with your registered course or you have already completed or registered for the course", "Warning", JOptionPane.WARNING_MESSAGE);

                        break;
                    }
                    else if(totalCredits > 4 && seats == 0)
                    {
                    //    printCourseHistory();
                        JOptionPane.showMessageDialog(null, "Unable to register, there is are no seats available or you exceeding the required credits ", "Warning", JOptionPane.WARNING_MESSAGE);

                     
                        break;
                    }
                }
               
            }
        }
        
        if (shouldAddNewCourse && totalCredits <= 4 && seats > 0 && totalCredits1 < 32)
        {
         //   printCourseHistory();
            addnewcourse();
            for (Courses.CourseDetails course : coursehistory.getCoursehistory()) {
                if(course.getCoursename().equals(Subject) && course.getEndDateTime().equals(endDateTime) && course.getStartDateTime().equals(startDateTime) && course.getCourse_professor_name().equals(professor_name))
                {
                 course.setCourse_seats(seats -1);
                }
            
        }
            

        }
        else{
                                    JOptionPane.showMessageDialog(null, "Unable to register, there is are no seats available or you exceeding the required credits ", "Warning", JOptionPane.WARNING_MESSAGE);

        }
        
        if(p==0)
        {
              Professor.registercours user1 = new Professor.registercours("Dev ",p_neuid,"awaiting","NotApplicable","NA","NA");
              
             Courses.CourseDetails vs = coursehistory.addNewcourse(); // addNewregcourse(Subject, pre_requisite, Department, Subject_code, CRN, professor_name, Term_offered, startDateTime, endDateTime, Description, Credits, status, seats, mode,  Grade);
            vs.setCRN(CRN);
            vs.setCourse_credit(Credits);
            vs.setCourse_department(Department);
            vs.setCourse_description(Description);
            vs.setEndDateTime(endDateTime);
            vs.setCourse_Type(mode);
            vs.setCourse_grade("NA");
            vs.setCourse_prerequisite(pre_requisite);
            vs.setCourse_professor_name(professor_name);
            vs.setCourse_seats(seats);
            vs.setStartDateTime(startDateTime);
            vs.setCourse_status("ongoing");
            vs.setCourse_code(Subject_code);
            vs.setTerm_offered(Term_offered);
            vs.setCoursename(Subject);
            vs.setRating(rating);
            user1.addCourse(vs);
            regcoursehistory.addruser(user1);

    }
        }
        
        
        
        
    
    catch (ParseException e) {
        // Handle the ParseException (e.g., log the error or throw a custom exception)
        System.err.println("Error parsing date: " + e.getMessage());
        // You might want to throw an exception here or handle it according to your application's logic
    }
    }
    
    
    public void addnewcourse(){        
                    
        for (Professor.registercours regCourse : regcoursehistory.getRegcoursehistory()) {
        if (regCourse.getNEUID().equals(p_neuid)) {
            
            Courses.CourseDetails vs = coursehistory.addNewcourse(); // addNewregcourse(Subject, pre_requisite, Department, Subject_code, CRN, professor_name, Term_offered, startDateTime, endDateTime, Description, Credits, status, seats, mode,  Grade);
            vs.setCRN(CRN);
             vs.setCourse_credit(Credits);
            vs.setCourse_department(Department);
            vs.setCourse_description(Description);
            vs.setEndDateTime(endDateTime);
            vs.setCourse_Type(mode);
            vs.setCourse_grade("NA");
            vs.setCourse_prerequisite(pre_requisite);
            vs.setCourse_professor_name(professor_name);
            vs.setCourse_seats(seats);
            vs.setStartDateTime(startDateTime);
            vs.setCourse_status("ongoing");
            vs.setCourse_code(Subject_code);
            vs.setTerm_offered(Term_offered);
            vs.setCoursename(Subject);
            vs.setRating(rating);
            regCourse.addCourse(vs);
            
        }}
                    
                    
     /*       for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
            if (regCourse.getNEUID().equals("NEU01")) {
                for (Courses course : regCourse.getCoursehistory()) {
                      System.out.println(course.getsubject());
                                            System.out.println(course.getStatus());

                      
                }
            }
                }   */

            
        }
     

  private void populatefieldc(){
              
for (Professor.ProfessorProfile stu : ph.getHistory_professor()) 
{
    
        if (stu.getProf_first_name().equals(professor_name))
        {
            txtnamec.setText(stu.getProf_first_name());
            txtdepartmenthc.setText(stu.getProf_speciality());
            txtexpc.setText(String.valueOf(stu.getProf_experience()));
          //  txtgradh.setText(stu.getGradyear());
            txtemailc.setText(String.valueOf(stu.getProf_mail()));
            txtneuc.setText(stu.getProf_id());
            
        }
        
        
}

for (Courses.CourseDetails ctu : coursehistory.getCoursehistory()) 
{
        if (ctu.getCoursename().equals(Subject))
        {
                CourseDisc.setText(Description);

     }
}
  }
    
    
    
 /*
    
    public void printCourseHistory() {
        for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
            System.out.println("Name: " + regCourse.getName());
            System.out.println("NEUID: " + regCourse.getNEUID());
            System.out.println("Course History:");
            
            // Iterate through coursehistory ArrayList and print course details
            for (Courses course : regCourse.getCoursehistory()) {
                System.out.println("  Course Code: " + course.getProfessor_name());
                System.out.println("  Course Name: " + course.getsubject());
                // Print other course details as needed
            }
            
            System.out.println("------------------------");
        }
    
    
   
    


    
        
    }//GEN-LAST:event_jButton7ActionPerformed
*/
    private void txtneucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtneucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtneucActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        CoursesearchPanel panel = new CoursesearchPanel(userProcessContainer,  history,  ph, p_neuid,coursehistory,  regcoursehistory, sugg);
        userProcessContainer.add("CoursesearchPanel", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        UpdateAccountJPanel panel = new UpdateAccountJPanel(userProcessContainer,  history,ph,p_neuid,coursehistory,  regcoursehistory,sugg);
        userProcessContainer.add("UpdateAccountJPanel", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
          Rating panel = new Rating(userProcessContainer,  history,ph,p_neuid,coursehistory,  regcoursehistory,sugg);
        userProcessContainer.add("Rating", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        Studenth panel = new Studenth(userProcessContainer, history, ph, p_neuid,coursehistory,  regcoursehistory, sugg);
        userProcessContainer.add("Studenth", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         suggestion panel = new suggestion(userProcessContainer,  history,ph,p_neuid,coursehistory,  regcoursehistory,sugg);
        userProcessContainer.add("suggestion", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton8ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CourseDisc;
    private javax.swing.JLabel Namelbl;
    private javax.swing.JLabel Specality;
    private javax.swing.JLabel deplbl;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel termlbl;
    private javax.swing.JTextField txtdepartmenthc;
    private javax.swing.JTextField txtemailc;
    private javax.swing.JTextField txtexpc;
    private javax.swing.JTextField txtnamec;
    private javax.swing.JTextField txtneuc;
    private javax.swing.JLabel txtprofpic;
    // End of variables declaration//GEN-END:variables
}
