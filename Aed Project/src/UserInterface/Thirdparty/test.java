/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Thirdparty;

import Courses.CourseDetails;
import Professor.ProfessorHistory;
import Courses.Suggestion;
import Professor.registercours;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author devmi
 */
public class test extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    Professor.ProfessorHistory regcoursehistory;
    Professor.ProfessorHistory history;
    Professor.ProfessorHistory coursehistory;
           Professor.ProfessorHistory sugg;


    /**
     * Creates new form test
     */
    public test(JPanel userProcessContainer, ProfessorHistory history, ProfessorHistory coursehistory,ProfessorHistory regcoursehistory, ProfessorHistory sugg) {
       initComponents();
        this.userProcessContainer = userProcessContainer;
        this.regcoursehistory = regcoursehistory; 
        this.history = history;
        this.coursehistory = coursehistory;
        this.sugg =sugg;
        populateTable();

    }
    
    private void populateTable2(String neu){
       
       for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
        if (regCourse.getNEUID().equals("NEU01")) {
        DefaultTableModel dtm = (DefaultTableModel) tblview.getModel();
                dtm.setRowCount(0);        

        for(Courses.CourseDetails course: regCourse.getCoursehistory()){
            if(course.getCourse_status().equals("completed"))
           {
            Object[] row = new Object[4];
            row[0] = course;
            row[1] = course.getCourse_professor_name();
            row[2] = course.getCoursename();
            row[3] = course.getCourse_grade();
            
           

            
            dtm.addRow(row);
        }
        }
   }
       }
   }
    
    
    private void populateTable(){
       
       for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
        if (regCourse.getNEUID().equals("NEU01")) {
        DefaultTableModel dtm1 = (DefaultTableModel) tblapprove.getModel();
        dtm1.setRowCount(0);        

        
            if(regCourse.getStautofdegree().equals("Requested"))
           {
            Object[] row = new Object[3];
            row[0] = regCourse;
            row[1] = regCourse.getName();
            row[2] = regCourse.getStautofdegree();
            
            System.out.println(regCourse.getName());
           

            
            dtm1.addRow(row);
        }
        }
   }
       }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnview = new javax.swing.JButton();
        btnapprove = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblapprove = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblview = new javax.swing.JTable();

        btnview.setText("view");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });

        btnapprove.setText("Approve");
        btnapprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapproveActionPerformed(evt);
            }
        });

        tblapprove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane3.setViewportView(tblapprove);

        tblview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblview);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnview, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(393, 393, 393))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(395, 395, 395))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnview, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(btnapprove, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = tblapprove.getSelectedRow();
        if(selectedRow < 0){
              JOptionPane.showMessageDialog(null, "Please select a row from table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            DefaultTableModel model = (DefaultTableModel) tblapprove.getModel();
            registercours regCourse = (registercours) model.getValueAt(selectedRow, 0);
            String neu = regCourse.getNEUID();
            populateTable2(neu);
        }
    
        
        
      
                    
        
    }//GEN-LAST:event_btnviewActionPerformed

    private void btnapproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapproveActionPerformed
        // TODO add your handling code here:
        
          
        
       boolean shouldAddNewCourse = true;
    int totalCredits = 0;
    

        for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
            if (regCourse.getNEUID().equals("NEU01")) {
                regCourse.getStautofdegree().equals("Requested");
                for (Courses.CourseDetails course : regCourse.getCoursehistory()) {
                    
                    if(course.getCourse_status().equals("completed"))
                        totalCredits += course.getCourse_credit();
                   
                }
            }
        }
        
        if(totalCredits == 32)
        {
         for (registercours regCourse : regcoursehistory.getRegcoursehistory()) {
            if (regCourse.getNEUID().equals("NEU01")) {
                regCourse.setStautofdegree("approved");
            }
         }
         JOptionPane.showMessageDialog(null, "Unable to register, There is a time conflict with your registered course or you have already completed or registered for the course", "Warning", JOptionPane.WARNING_MESSAGE);

            
                    }
    }//GEN-LAST:event_btnapproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnapprove;
    private javax.swing.JButton btnview;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblapprove;
    private javax.swing.JTable tblview;
    // End of variables declaration//GEN-END:variables
}
