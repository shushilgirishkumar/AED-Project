/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Courses.CourseDetails;
import java.awt.CardLayout;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Employer.EmployerHistory;
import Professor.ProfessorHistory;
import Student.Studentde;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.text.SimpleDateFormat;


/**
 *
 * @author Aneesh
 */
public class Rating extends javax.swing.JPanel {
   private JPanel userProcessContainer;
     Professor.ProfessorHistory history;
         Professor.ProfessorHistory coursehistory;
         Professor.ProfessorHistory regcoursehistory;
          Professor.ProfessorHistory sugg;


         String Subject1;
        String  proff;
        String   std;
        
       

    /**
     * Creates new form Rating
     */
    public Rating(JPanel userProcessContainer, ProfessorHistory history, ProfessorHistory coursehistory, ProfessorHistory regcoursehistory,  ProfessorHistory sugg) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        initComponents();
        this.history = history;
        this.coursehistory = coursehistory;
        this.regcoursehistory = regcoursehistory;
        this.sugg = sugg;
        populateTable2();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     private void populateTable2(){
       
       for (Professor.registercours regCourse : regcoursehistory.getRegcoursehistory()) {
        if (regCourse.getNEUID().equals("NEU01")) {
        DefaultTableModel dtm = (DefaultTableModel) tblstudentscompleted.getModel();
                dtm.setRowCount(0);        

        for(Courses.CourseDetails course: regCourse.getCoursehistory()){
            if(course.getCourse_status().equals("completed"))
           {
            Object[] row = new Object[7];
            row[0] = course;
            row[1] = course.getCourse_professor_name();
            row[2] = course.getCoursename();
            row[3] = course.getCourse_grade();
            row[4] = course.getTerm_offered();
            row[5] = course.getCourse_code();
            row[6] = course.getRating();
           

            
            dtm.addRow(row);
            
        }
        }
   }
       }
   }
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Suggesttxt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblstudentscompleted = new javax.swing.JTable();
        btnselect = new javax.swing.JButton();
        bnsave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnsearchcourse = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        btnfeedback = new javax.swing.JButton();
        btnhome = new javax.swing.JButton();
        btncoursesuggestion = new javax.swing.JButton();
        btnsignup = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Strongly Agree", "Satisfied", "Disagree", "Strongly Disagree" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("The professor effectively communicated the course objectives and expectations.");

        jLabel3.setText("The professor demonstrated a deep knowledge of the subject matter");

        jLabel4.setText("The professor was accessible and approachable for questions and assistance");

        jLabel5.setText("The professor gave timely and constructive feedback on assignments and exams");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Strongly Agree", "Satisfied", "Disagree", "Strongly Disagree" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Strongly Agree", "Satisfied", "Disagree", "Strongly Disagree" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Strongly Agree", "Satisfied", "Disagree", "Strongly Disagree" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        Suggesttxt.setColumns(20);
        Suggesttxt.setRows(5);
        jScrollPane1.setViewportView(Suggesttxt);

        tblstudentscompleted.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Department", "Professor name", "Subject", "Grade", "Term offered", "Subject code", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblstudentscompleted);

        btnselect.setText("Select");
        btnselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectActionPerformed(evt);
            }
        });

        bnsave.setText("Save");
        bnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnsaveActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        btnsearchcourse.setText("Search Course");
        btnsearchcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchcourseActionPerformed(evt);
            }
        });

        btnsearch.setText("Settings");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnfeedback.setText("Feedback");
        btnfeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfeedbackActionPerformed(evt);
            }
        });

        btnhome.setText("Home");
        btnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhomeActionPerformed(evt);
            }
        });

        btncoursesuggestion.setText("Course suggestion");
        btncoursesuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncoursesuggestionActionPerformed(evt);
            }
        });

        btnsignup.setText("Signup");
        btnsignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsignupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnsearchcourse)
                            .addComponent(btnsearch)
                            .addComponent(btnfeedback)
                            .addComponent(btnhome, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btncoursesuggestion)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnsignup)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(btnhome)
                .addGap(44, 44, 44)
                .addComponent(btnsearchcourse)
                .addGap(58, 58, 58)
                .addComponent(btnsearch)
                .addGap(53, 53, 53)
                .addComponent(btnfeedback)
                .addGap(42, 42, 42)
                .addComponent(btncoursesuggestion)
                .addGap(201, 201, 201)
                .addComponent(btnsignup)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(btnselect))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(bnsave)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnselect)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bnsave))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void btnselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = tblstudentscompleted.getSelectedRow();
        if(selectedRow < 0){
              JOptionPane.showMessageDialog(null, "Please select a row from table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
         DefaultTableModel model = (DefaultTableModel) tblstudentscompleted.getModel();
            Courses.CourseDetails selectedcourse = (Courses.CourseDetails) model.getValueAt(selectedRow, 0);
           Subject1 = selectedcourse.getCoursename();
           proff = selectedcourse.getCourse_professor_name();
             std = selectedcourse.getStartDateTime();
        }
    }//GEN-LAST:event_btnselectActionPerformed

    private void bnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnsaveActionPerformed
        // TODO add your handling code here:
        
        
        
        
        String Department =  (String) jComboBox1.getSelectedItem();
       System.out.println(Department);
        
         String q1 =  (String) jComboBox2.getSelectedItem();
        
         String q2 =  (String) jComboBox1.getSelectedItem();
         
           
         String q3 =  (String) jComboBox3.getSelectedItem();
         
        String q4 =  (String) jComboBox4.getSelectedItem();


        preformfun(q1,q2,q3,q4);
        
        
         
        
    }//GEN-LAST:event_bnsaveActionPerformed

    private void btnsearchcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchcourseActionPerformed
        // TODO add your handling code here:

        CoursesearchPanel panel = new CoursesearchPanel(userProcessContainer,  history,  coursehistory,  regcoursehistory,sugg );
        userProcessContainer.add("CoursesearchPanel", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnsearchcourseActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:

        UpdateAccountJPanel panel = new UpdateAccountJPanel(userProcessContainer,  history,  coursehistory,  regcoursehistory,sugg);
        userProcessContainer.add("UpdateAccountJPanel", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnfeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfeedbackActionPerformed
        // TODO add your handling code here:
        Rating panel = new Rating(userProcessContainer, history,  coursehistory, regcoursehistory, sugg);
        userProcessContainer.add("Rating", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnfeedbackActionPerformed

    private void btnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhomeActionPerformed
        // TODO add your handling code here:

        Studenth panel = new Studenth(userProcessContainer, history,  coursehistory,  regcoursehistory,sugg);
        userProcessContainer.add("Studenth", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnhomeActionPerformed

    private void btncoursesuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncoursesuggestionActionPerformed
        // TODO add your handling code here:
        suggestion panel = new suggestion(userProcessContainer, history,  coursehistory, regcoursehistory,sugg);
        userProcessContainer.add("suggestion", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btncoursesuggestionActionPerformed

    private void btnsignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsignupActionPerformed
        // TODO add your handling code here:
        suggestion panel = new suggestion(userProcessContainer, history,  coursehistory, regcoursehistory,sugg);
        userProcessContainer.add("suggestion", panel);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnsignupActionPerformed

            private void preformfun(String q1, String q2,String q3, String q4){
                
     for (Courses.CourseDetails course : coursehistory.getCoursehistory()) {
    if (course.getCoursename()!= null && course.getCourse_professor_name() != null && course.getStartDateTime() != null
            && course.getCoursename().equals(Subject1) && course.getCourse_professor_name().equals(proff)
            && course.getStartDateTime().equals(std)) {
        int rating1 = calculateRating(q1);
        int rating2 = calculateRating(q2);
        int rating3 = calculateRating(q3);
        int rating4 = calculateRating(q4);

        // Update the course rating based on user responses
        int totalRating = (rating1 + rating2 + rating3 + rating4) / 4;
        course.setRating(totalRating);
    }

                /*
        for(Courses course: coursehistory.getCoursehistory()){
            if(course.getsubject().equals(Subject1) && course.getProfessor_name().equals(proff) && course.getStartDateTime().equals(std))
            {
                if(q1.equals("Strongly Agree"))
                {
                    course.setRating((course.getRating()+ 4)/2);
                }
                if(q1.equals("Satisfied"))
                {
                    course.setRating((course.getRating()+ 3)/2);
                }
                if(q1.equals("Disagree"))
                {
                    course.setRating((course.getRating()+ 2)/2);
                }
                if(q1.equals("Strongly Disagree"))
                {
                    course.setRating((course.getRating()+ 1)/2);
                }
                 if(q2.equals("Strongly Agree"))
                {
                    course.setRating((course.getRating()+ 4)/2);
                }
                if(q2.equals("Satisfied"))
                {
                    course.setRating((course.getRating()+ 3)/2);
                }
                if(q2.equals("Disagree"))
                {
                    course.setRating((course.getRating()+ 2)/2);
                }
                if(q2.equals("Strongly Disagree"))
                {
                    course.setRating((course.getRating()+ 1)/2);
                }
                 if(q3.equals("Strongly Agree"))
                {
                    course.setRating((course.getRating()+ 4)/2);
                }
                if(q3.equals("Satisfied"))
                {
                    course.setRating((course.getRating()+ 3)/2);
                }
                if(q3.equals("Disagree"))
                {
                    course.setRating((course.getRating()+ 2)/2);
                }
                if(q3.equals("Strongly Disagree"))
                {
                    course.setRating((course.getRating()+ 1)/2);
                }
                
                if(q4.equals("Strongly Agree"))
                {
                    course.setRating((course.getRating()+ 4)/2);
                }
                if(q4.equals("Satisfied"))
                {
                    course.setRating((course.getRating()+ 3)/2);
                }
                if(q4.equals("Disagree"))
                {
                    course.setRating((course.getRating()+ 2)/2);
                }
                if(q4.equals("Strongly Disagree"))
                {
                    course.setRating((course.getRating()+ 1)/2);
                }
            }
            }
            }
            
*/
     }
            }

    private int calculateRating(String response) {
    if (response.equals("Strongly Agree")) {
        return 4;
    } else if (response.equals("Satisfied")) {
        return 3;
    } else if (response.equals("Disagree")) {
        return 2;
    } else if (response.equals("Strongly Disagree")) {
        return 1;
    } else {
        // Handle invalid response
        return 0;
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Suggesttxt;
    private javax.swing.JButton bnsave;
    private javax.swing.JButton btncoursesuggestion;
    private javax.swing.JButton btnfeedback;
    private javax.swing.JButton btnhome;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnsearchcourse;
    private javax.swing.JButton btnselect;
    private javax.swing.JButton btnsignup;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblstudentscompleted;
    // End of variables declaration//GEN-END:variables
}
